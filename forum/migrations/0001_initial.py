# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-25 17:00
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import forum.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, upload_to=forum.models.Images.path_upload, verbose_name='Изображение')),
                ('prev_image', models.CharField(blank=True, default='', max_length=255, verbose_name='Уменьшеная копия')),
                ('name', models.CharField(blank=True, default='Image', max_length=255, verbose_name='Название изображения')),
            ],
            options={
                'verbose_name_plural': 'Картинки',
                'db_table': ('images_forum',),
                'verbose_name': 'Картинка',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=1000, verbose_name='Текст сообщения')),
                ('question', models.BooleanField(default=True, verbose_name='Вопрос?')),
                ('date_create', models.DateField(default=datetime.date(2017, 9, 25), verbose_name='Дата создания сообщения')),
                ('positive', models.IntegerField(default=0, verbose_name='Позитивный рейтинг')),
                ('negative', models.IntegerField(default=0, verbose_name='Негативный рейтинг')),
                ('image', models.ManyToManyField(to='forum.Images', verbose_name='Прикрепленные изображения')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Раздел форума')),
                ('description', models.CharField(max_length=200, verbose_name='Описание')),
                ('visible', models.BooleanField(default=True, verbose_name='Доступна')),
            ],
            options={
                'verbose_name_plural': 'Разделы',
                'db_table': ('section_forum',),
                'verbose_name': 'Раздел',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название темы')),
                ('date_create', models.DateField(default=datetime.date(2017, 9, 25), verbose_name='Дата создания темы')),
                ('visible', models.BooleanField(default=True, verbose_name='Доступна')),
                ('closed', models.BooleanField(default=False, verbose_name='Закрыта')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_theme', to='forum.Section', verbose_name='Раздел форума')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_theme', to='user.User', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Темы',
                'db_table': ('themes_forum',),
                'verbose_name': 'Тема',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_theme', to='forum.Theme'),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_message', to='user.User', verbose_name='Пользователь'),
        ),
    ]
